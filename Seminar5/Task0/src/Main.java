/*
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ0
üìå –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ù–æ–º–µ—Ä–æ–≤ –ø–∞—Å–ø–æ—Ä—Ç–æ–≤ –∏ –§–∞–º–∏–ª–∏–π
—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏.
123456 –ò–≤–∞–Ω–æ–≤
321456 –í–∞—Å–∏–ª—å–µ–≤
234561 –ü–µ—Ç—Ä–æ–≤–∞
234432 –ò–≤–∞–Ω–æ–≤
654321 –ü–µ—Ç—Ä–æ–≤–∞
345678 –ò–≤–∞–Ω–æ–≤
üìå –í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º —Å —Ñ–∞–º–∏–ª–∏–µ–π –ò–≤–∞–Ω–æ–≤.
 */
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Map<Integer, String> passNumToName = new TreeMap<>(Comparator.reverseOrder());//Comparator.reverseOrder() –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        passNumToName.put(123456, "–ò–≤–∞–Ω–æ–≤");// –∫–ª–∞–¥–µ–º –≤ Map –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∫–ª—é—á. Map –∏–∑–º–µ–Ω—è–µ–º—ã–π
        passNumToName.put(321456, "–í–∞—Å–∏–ª—å–µ–≤");
        passNumToName.put(234561, "–ü–µ—Ç—Ä–æ–≤–∞");
        passNumToName.put(234432, "–ò–≤–∞–Ω–æ–≤");
        passNumToName.put(654321, "–ü–µ—Ç—Ä–æ–≤–∞");
        passNumToName.put(345678, "–ò–≤–∞–Ω–æ–≤");

        Map<Integer, String> map = Map.of(123456, "–ò–≤–∞–Ω–æ–≤", 321456, "–í–∞—Å–∏–ª—å–µ–≤");// –∫–ª–∞–¥–µ–º –≤ Map –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∫–ª—é—á, –Ω–æ –¥–µ–ª–∞–µ–º Map —É–∂–µ –Ω–µ –∏–∑–º–µ–Ω—è–µ–º—ã–º
        passNumToName.put(321456, "–í–∞—Å–∏–ª—å–µ–≤");
        System.out.println(passNumToName);

        for(Map.Entry<Integer, String> entry : passNumToName.entrySet()) {
            if (entry.getValue().equals("–ò–≤–∞–Ω–æ–≤"))
                System.out.println(entry);
        }

        List<Map.Entry<Integer, String>> ivanovs = passNumToName.entrySet()
                .stream()
                .filter(e -> e.getValue().equals("–ò–≤–∞–Ω–æ–≤")).toList();
        System.out.println(ivanovs);
    }
}